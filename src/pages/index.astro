---
import { Image } from "astro:assets"
import Layout from "../components/layout/Layout.astro"
import "../styles/global.css"
import firstImage from "../assets/broom-dirty-floor-cleaning.jpg"
import secondImage from "../assets/cleaning-mirrors-squeege.jpg"
import thirdImage from "../assets/making-the-bed.jpg"
import Logo from "../assets/cleaner-queen-logo.svg"
---

<Layout title="Home | South Florida Cleaning Services by Cleaner Queen">
  <div
    class="absolute inset-0 bg-white flex flex-col items-center justify-center gap-5"
  >
    <Logo class="w-9/12 mx-auto max-w-[500px]" />

    <!-- Slideshow -->
    <div
      id="hero-slideshow"
      class="relative w-9/12 mx-auto max-w-[500px] overflow-hidden rounded-2xl aspect-square"
    >
      <!-- current slide starts visible (opacity-100) -->
      <Image
        src={firstImage}
        alt="Cleaning Service - Floors"
        class="slide absolute inset-0 w-full h-full object-cover opacity-100 transition-opacity duration-[1200ms]"
        fit="cover"
        sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 500px"
        loading="eager"
      />
      <Image
        src={secondImage}
        alt="Cleaning Service - Mirrors and glass windows"
        class="slide absolute inset-0 w-full h-full object-cover opacity-0 transition-opacity duration-[1200ms]"
        fit="cover"
        sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 500px"
        loading="lazy"
      />
      <Image
        src={thirdImage}
        alt="Cleaning Service - Bedrooms"
        class="slide absolute inset-0 w-full h-full object-cover opacity-0 transition-opacity duration-[1200ms]"
        fit="cover"
        sizes="(max-width: 640px) 100vw, (max-width: 1024px) 50vw, 500px"
        loading="lazy"
      />
    </div>

    <h1
      class="text-2xl 2xl:text-4xl font-black uppercase text-sky-500 w-9/12 mx-auto max-w-[500px]"
    >
      Cleaning Services for South Florida Homes and Businesses
    </h1>
    <a
      href="tel:+17273202907"
      class="bg-green-500 text-2xl 2xl:text-4xl font-bold text-white px-4 py-2 rounded-xl"
      >(727) 320-2907</a
    >
  </div>

  <!-- Tiny, framework-free crossfade -->
  <script is:inline>
    ;(function () {
      const container = document.getElementById("hero-slideshow")
      if (!container) return

      const slides = Array.from(container.querySelectorAll(".slide"))
      if (slides.length < 2) return

      // Respect users who prefer reduced motion
      const prefersReduced = window.matchMedia(
        "(prefers-reduced-motion: reduce)"
      ).matches

      // Show only the first slide to start
      slides.forEach((el, i) => {
        el.style.opacity = i === 0 ? "1" : "0"
        el.style.zIndex = i === 0 ? "1" : "0"
      })

      let current = 0
      let next = 1
      const HOLD_MS = prefersReduced ? 3000 : 4000 // how long each image is shown
      // Fade duration is controlled by Tailwind: duration-[1200ms]
      const tick = () => {
        const currEl = slides[current]
        const nextEl = slides[next]

        if (prefersReduced) {
          // No animation: just swap
          currEl.style.opacity = "0"
          nextEl.style.opacity = "1"
          current = next
          next = (next + 1) % slides.length
          setTimeout(tick, HOLD_MS)
          return
        }

        // Place next on top and fade it in
        nextEl.style.zIndex = "2"
        nextEl.style.opacity = "1"

        const onEnd = (e) => {
          if (e.propertyName !== "opacity") return
          nextEl.removeEventListener("transitionend", onEnd)

          // Hide the old slide underneath after fade completes
          currEl.style.opacity = "0"
          // Reset stacking so the new current is underneath until the next cycle
          nextEl.style.zIndex = "1"
          currEl.style.zIndex = "0"

          current = next
          next = (next + 1) % slides.length

          setTimeout(tick, HOLD_MS)
        }

        // Use once:true to avoid leaks; Tailwind transitions fire a single 'opacity' event
        nextEl.addEventListener("transitionend", onEnd, { once: true })
      }

      setTimeout(tick, HOLD_MS)
    })()
  </script>
</Layout>
